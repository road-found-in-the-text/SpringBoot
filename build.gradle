buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'

	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

jar{
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-devtools'

	implementation 'junit:junit:4.13.2'
	implementation 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.8.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'

	//DB
	implementation 'mysql:mysql-connector-java'

	//로그인

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation  'io.jsonwebtoken:jjwt-jackson:0.11.2';

	implementation 'org.apache.httpcomponents:httpclient:4.5.10'
	implementation 'com.google.code.gson:gson:2.8.6'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation 'org.springframework.boot:spring-boot-starter-mustache'


	//swagger
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'


	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation "com.amazonaws:aws-java-sdk-s3"

	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation "com.querydsl:querydsl-core:${queryDslVersion}"



	implementation 'mysql:mysql-connector-java'

	// Querydsl
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'
	implementation 'javax.servlet:jstl'

	// Gradle
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation "com.amazonaws:aws-java-sdk-s3"


	// mail
	 implementation 'org.springframework.boot:spring-boot-starter-mail'

	// mac os에서는 밑에 두줄을 추가하니 querydsl compile이 되지 않았다. 위에 한 줄로 바꾸니 잘 되었다.
//	implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.0'
//	compile "com.example.umc3_teamproject:javax.mail"

	//애플 로그인
	compileOnly 'com.mashape.unirest:unirest-java:1.3.27'
//	implementation group: 'org.bouncycastle', name:'bcprov-jdk15on', version:'1.69'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
	implementation group: 'org.bouncycastle', name: 'bcpkix-jdk14', version: '1.55'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1';

	// m1 mac os에서 dsn server 문제 해결
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'




}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

